name: Build Firmware

on:
  schedule:
    - cron: '0 2 * * *' # Scheduled runs every day at 2am UTC
  workflow_dispatch:

jobs:

  "Firmware":
    if: ${{ github.repository_owner == 'armbian' }}
    runs-on: ubuntu-latest
    name: "Firmware (small and full)"
    env:
      OCI_TARGET_BASE: "ghcr.io/${{ github.repository }}/" # This is picked up by the Docker launcher automatically
    steps:

      # Login to ghcr.io, for later uploading rootfs to ghcr.io
      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: Checkout build repo
        uses: actions/checkout@v3 # We don't need to clone git, really. A wget would suffice for GH-hosted runners, clone is better for self-hosted runners.
        with:
          repository: armbian/build #${{ github.repository_owner }}/armbian-build
          ref: main
          fetch-depth: 1
          clean: false # true is default. it *will* delete the hosts /dev if mounted inside.

      - name: Build firmware (small)
        id: firmware
        run: |
          bash ./compile.sh firmware SHARE_LOG=yes

      - name: Build firmware (full)
        id: firmware_full
        run: |
          bash ./compile.sh firmware-full SHARE_LOG=yes

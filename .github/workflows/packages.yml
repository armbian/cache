name: Sync 3rd party packages

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  start:
    runs-on: ubuntu-latest
    name: "Start"
    steps:
      - run: |
          echo "Start"
  
  ppa:
    needs: [start]
    strategy:
      fail-fast: false
      matrix:
        project: [graphics,zfs,cinnamon,dockbarx,dde]
        target: [focal,jammy,kinetic]
    
    name: PPA    
    runs-on: [Ubuntu-latest]
    steps:

      - name: Install SSH key for storage
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_TORRENTS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
          if_key_exists: replace

      - name: Import GPG key

        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY1 }}
          passphrase: ${{ secrets.GPG_PASSPHRASE1 }}

      - name: Install Aptly
        run: |

          wget https://github.com/aptly-dev/aptly/releases/download/v1.5.0/aptly_1.5.0_amd64.deb
          sudo dpkg -i aptly_1.5.0_amd64.deb
          sudo rm aptly_1.5.0_amd64.deb

      - name: Install keys
        run: |
        
          gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 5ABCE68FF4633EA42E219156957D2708A03A4626 # oibaf graphics drivers
          gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659 # zfs
          gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 0xa3433deabcb572389d336893232a5f5626b47df6 # cinnamon
          gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 84C8BB5C8E93FFC280EAC512C27BE3D0F0FE09DA # dde
          gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 0x6CAE7FA0B44EEF4EBD4E955F77D026E2EEAD66BD # dockbarx

      - name: Download
        run: |

          # exceptions
          [[ "${{ matrix.project }}" == 'graphics' && "${{ matrix.target }}" == 'focal' ]] && exit 0
          [[ "${{ matrix.project }}" == 'cinnamon' && "${{ matrix.target }}" == 'kinetic' ]] && exit 0
          [[ "${{ matrix.project }}" == 'zfs' && "${{ matrix.target }}" == 'kinetic' ]] && exit 0

          [[ ${{ matrix.project }} == graphics ]] && PPA="http://ppa.launchpadcontent.net/oibaf/graphics-drivers/ubuntu"
          [[ ${{ matrix.project }} == zfs ]]      && PPA="http://ppa.launchpad.net/jonathonf/zfs/ubuntu"
          [[ ${{ matrix.project }} == cinnamon ]] && PPA="http://ppa.launchpad.net/wasta-linux/cinnamon-tagged/ubuntu"          
          [[ ${{ matrix.project }} == dockbarx ]] && PPA="http://ppa.launchpad.net/xuzhen666/dockbarx/ubuntu"
          [[ ${{ matrix.project }} == dde ]]      && PPA="http://ppa.launchpad.net/ubuntudde-dev/stable/ubuntu"

          aptly mirror create ${{ matrix.project }}-${{ matrix.target }} ${PPA} ${{ matrix.target }} main
          if [[ $? -eq 0 ]]; then
              mkdir -p ${HOME}/output/debs/extra/${{ matrix.target }}-utils
              aptly mirror update ${{ matrix.project }}-${{ matrix.target }}
              aptly snapshot create ${{ matrix.project }}-${{ matrix.target }} from mirror ${{ matrix.project }}-${{ matrix.target }}
              aptly publish -batch=true -passphrase=${{ secrets.GPG_PASSPHRASE1 }} snapshot ${{ matrix.project }}-${{ matrix.target }}
              find /home/runner/.aptly/public/ -type f -exec cp {} mkdir -p ${HOME}/output/debs/extra/${{ matrix.target }}-utils \;
          fi

      - name: Deploy to server
        run: |

          sudo apt-get -y -qq install lftp
          if [[ -d /home/runner/.aptly/public/ ]]; then
          lftp -u upload, -e "set net:timeout 4;set net:max-retries 6;mirror --Remove-source-files -R --no-empty-dirs --parallel=8 --no-perms ${HOME}/output/debs/ debs-beta/ ;bye" sftp://users.armbian.com
          fi

  github:
    needs: [start]
    strategy:
      fail-fast: false
      matrix:
        project: ["cli/cli","aptly-dev/aptly"]

    name: Github
    runs-on: [Ubuntu-latest]
    steps:

      - name: Install SSH key for storage
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_TORRENTS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
          if_key_exists: replace

      - name: Download from Github
        run: |

          mkdir -p ${HOME}/output
          cd ${HOME}/output
          gh release download -p '*.deb' --repo github.com/${{ matrix.project }}

      - name: Deploy to server
        run: |

          sudo apt-get -y -qq install lftp
          lftp -u upload, -e "set net:timeout 4;set net:max-retries 6;mirror --Remove-source-files -R --no-empty-dirs --parallel=8 --no-perms ${HOME}/output/ debs-beta/ ;bye" sftp://users.armbian.com

  stop:

    name: Stop
    needs: [start,ppa,github]
    runs-on: [ubuntu-latest]
    steps:
      - run: |
          echo "Start"
